name: Deploy
on:
  push:
    branches:
      - master

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip3 install -r requirements.txt
      - name: Test
        env:
          MONGODB_TEST_URI: ${{ secrets.MONGODB_TEST_URI }}
          MEILI_KEY: ${{ secrets.MEILI_KEY }}
          MEILI_URL: ${{ secrets.MEILI_URL }}
        run: pytest
      - name: Slack Notification - Test Failed
        uses: homoluctus/slatify@master
        if: failure()
        with:
          type: ${{ job.status }}
          job_name: 'Test'
          mention: 'here'
          channel: '#production'
          url: ${{ secrets.SLACK_WEBHOOK }}
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Install doctl
      uses: digitalocean/action-doctl@v2-experiment
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Deploy to machines on Digital Ocean LB
      env:
        SSH_KEY: ${{ secrets.KEY }}
      run: |
        droplet_ids=$(doctl compute load-balancer get --no-header --format DropletIDs ${{ secrets.DIGITALOCEAN_LB_ID }})
        droplets=$(doctl compute droplet list --no-header --format "ID,PublicIPv4")

        ips=""
        while IFS=\n read -r line; do
          id=$(echo $line | awk '{print $1}')
          if [[ "$droplet_ids" == *"$id"* ]]; then
            ip=$(echo $line | awk '{print $2}')
            ips="$ips $ip"
          fi
        done <<< "$droplets"

        echo "$SSH_KEY" > ./key_file
        chmod 600 ./key_file

        for ip in $ips; do
          echo "Deploying to $ip..."
          ssh -oStrictHostKeyChecking=no -i ./key_file -p ${{ secrets.PORT }} "${{ secrets.USERNAME }}@$ip" '/root/app/scripts/deploy.sh'
        done
    - name: Purge Cloudflare cache
      uses: jakejarvis/cloudflare-purge-action@master
      env:
        CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
        CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
    - name: Slack Notification
      uses: homoluctus/slatify@master
      if: always()
      with:
        type: ${{ job.status }}
        job_name: 'Deploy'
        mention: 'here'
        mention_if: 'failure'
        channel: '#production'
        url: ${{ secrets.SLACK_WEBHOOK }}
